plot_list[[paste0(coh, val)]]
plot_list[[paste0(coh, val)]] = smoov("tracts",
data=dt[[coh]],
value=val,
states=6, counties=37) +
coord_sf(xlim=c(-118.5, -118.15),
ylim=c(33.84, 34.05)) +
labs(title=cohtitle, subtitle=val) +
scale_fill_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5)) +
scale_color_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5)) +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size=15, face="bold", hjust = 0.5),
legend.position=c(0.05,0.2),
legend.justification=c(0.05,0.2),
legend.key.size=grid::unit(1, "cm"))
plot_list[[paste0(coh, val)]]
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/9_la_kfr_map.R', echo=TRUE)
?rescale
rescale(c(0,0.3,0.4,0.5,1))
scales::rescale(c(0,0.3,0.4,0.5,1))
plot_list[[paste0(coh, val)]] = smoov("tracts",
data=dt[[coh]],
value=val,
states=6, counties=37) +
coord_sf(xlim=c(-118.5, -118.15),
ylim=c(33.84, 34.05)) +
labs(title=cohtitle, subtitle=val) +
scale_fill_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,1)) +
scale_color_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,1)) +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size=15, face="bold", hjust = 0.5),
legend.position=c(0.05,0.2),
legend.justification=c(0.05,0.2),
legend.key.size=grid::unit(1, "cm"))
plot_list[[paste0(coh, val)]]
plot_list[[paste0(coh, val)]] = smoov("tracts",
data=dt[[coh]],
value=val,
states=6, counties=37) +
coord_sf(xlim=c(-118.5, -118.15),
ylim=c(33.84, 34.05)) +
labs(title=cohtitle, subtitle=val) +
scale_fill_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,1)) +
scale_color_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,7)) +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size=15, face="bold", hjust = 0.5),
legend.position=c(0.05,0.2),
legend.justification=c(0.05,0.2),
legend.key.size=grid::unit(1, "cm"))
plot_list[[paste0(coh, val)]] = smoov("tracts",
data=dt[[coh]],
value=val,
states=6, counties=37) +
coord_sf(xlim=c(-118.5, -118.15),
ylim=c(33.84, 34.05)) +
labs(title=cohtitle, subtitle=val) +
scale_fill_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,0.7)) +
scale_color_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,7)) +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size=15, face="bold", hjust = 0.5),
legend.position=c(0.05,0.2),
legend.justification=c(0.05,0.2),
legend.key.size=grid::unit(1, "cm"))
plot_list[[paste0(coh, val)]]
plot_list[[paste0(coh, val)]] = smoov("tracts",
data=dt[[coh]],
value=val,
states=6, counties=37) +
coord_sf(xlim=c(-118.5, -118.15),
ylim=c(33.84, 34.05)) +
labs(title=cohtitle, subtitle=val) +
scale_fill_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,0.7)) +
scale_color_gradientn(name="",
values=c(0, 0.3, 0.4, 0.5, 1),
colors=c("#990000",
"#ff3030",
"#FFD699",
"#007777",
"#005566"),
na.value="#CCCCCC",
labels=c(0.3, 0.4, 0.5),
breaks=c(0.3,0.4,0.5),
limits=c(0,0.7)) +
theme(plot.title = element_text(size=20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size=15, face="bold", hjust = 0.5),
legend.position=c(0.05,0.2),
legend.justification=c(0.05,0.2),
legend.key.size=grid::unit(1, "cm"))
plot_list[[paste0(coh, val)]]
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/9_la_kfr_map.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/7_poverty_ranks.R', echo=TRUE)
library(csranks)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/7_poverty_ranks.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/metafile.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/3_prep_neighb_data.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/7_poverty_ranks.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/3_prep_neighb_data.R', echo=TRUE)
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/7_poverty_ranks.R', echo=TRUE)
# Rank inference, all tracts, non-pooled
dt_test = fread("C:\Users\hab737\Downloads\nhgis0009_csv\nhgis0009_csv")
# Rank inference, all tracts, non-pooled
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv")
# Rank inference, all tracts, non-pooled
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test
head(dt_test)
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7)
)
dt_test[,..cols ]
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test
# Rank inference, all tracts, age bins =========================================
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test
dt_test[, pov_rate := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var := pov_rate*(1-pov_rate)/(pov_12_17+notpov_12_17)]
dt_test
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var)
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = dt_test[STATEA==6 & COUNTYA==37]
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var := pov_rate*(1-pov_rate)/(pov_12_17+notpov_12_17)]
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var)
mean_vector = dt_test[inds, ]$pov_rate
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var)
any(se_vector==0)
se_vector
se_vector[se_vector==0]
dt_test[se_vector==0]
dt_test[se_vector==0,]
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var) & !se_vector==0
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var) & se_vector!=0
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var := pov_rate*(1-pov_rate)/(pov_12_17+notpov_12_17)]
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var) & dt_test$pov_rate_var!=0
mean_vector = dt_test[inds, ]$pov_rate
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var)
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = dt_test[STATEA==6 & COUNTYA==37]
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var := pov_rate*(1-pov_rate)/(pov_12_17+notpov_12_17)]
# Same procedure over tracts instead of neighborhoods
inds = !is.na(dt_test$pov_rate) & !is.na(dt_test$pov_rate_var) & dt_test$pov_rate_var!=0
mean_vector = dt_test[inds, ]$pov_rate
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var)
CS_simul = csranks(x=mean_vector,
sd=se_vector,
coverage=0.95,
simul=TRUE,
stepdown=TRUE,
cstype="two-sided",
R=1000,
seed=1234,
na.rm=TRUE)
# Rank inference,all tracts
g=ggplot(results, aes(x=ranks, y=ranks)) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper))  +
coord_flip() +
xlab("Poverty Share Rank") +
ylab("Poverty Share Rank")
results = data.table(ranks = xrank(mean_vector),
lower = CS_simul$L,
upper = CS_simul$U)
# Rank inference,all tracts
g=ggplot(results, aes(x=ranks, y=ranks)) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper))  +
coord_flip() +
xlab("Poverty Share Rank") +
ylab("Poverty Share Rank")
g
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = dt_test[STATEA==6 & COUNTYA==37]
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate_6_11 := pov_6_11/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_var_6_11 := pov_rate*(1-pov_rate_6_11)/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_12_17 := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var_12_17 := pov_rate*(1-pov_rate_12_17)/(pov_12_17+notpov_12_17)]
# Same procedure over tracts instead of neighborhoods
for(age in c("6_11","12_17")){
if(age=="6_11"){
inds = !is.na(dt_test$pov_rate_6_11) & !is.na(dt_test$pov_rate_var_6_11) & dt_test$pov_rate_var_6_11!=0
mean_vector = dt_test[inds, ]$pov_rate_6_11
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var_6_11)
}else if(age=="12_17"){
inds = !is.na(dt_test$pov_rate_12_17) & !is.na(dt_test$pov_rate_var_12_17) & dt_test$pov_rate_var_12_17!=0
mean_vector = dt_test[inds, ]$pov_rate_12_17
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var_12_17)
}
CS_simul = csranks(x=mean_vector,
sd=se_vector,
coverage=0.95,
simul=TRUE,
stepdown=TRUE,
cstype="two-sided",
R=1000,
seed=1234,
na.rm=TRUE)
results = data.table(ranks = xrank(mean_vector),
lower = CS_simul$L,
upper = CS_simul$U)
# Rank inference,all tracts
g=ggplot(results, aes(x=ranks, y=ranks)) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper))  +
coord_flip() +
xlab("Poverty Share Rank") +
ylab("Poverty Share Rank")
ggsave(
filename = paste0("la_pov_ranks_tracts_2000_",age,".", outdev),
plot = g,
device = outdev,
path = file.path(path_fig, "pov_ranks"),
height=10,
width=8
)
}
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = dt_test[STATEA==6 & COUNTYA==37]
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate_6_11 := pov_6_11/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_var_6_11 := pov_rate*(1-pov_rate_6_11)/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_12_17 := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var_12_17 := pov_rate*(1-pov_rate_12_17)/(pov_12_17+notpov_12_17)]
dt_test = fread("C:/Users/hab737/Downloads/nhgis0009_csv/nhgis0009_csv/nhgis0009_ds151_2000_tract.csv")
dt_test = dt_test[STATEA==6 & COUNTYA==37]
cols = c(
"YEAR", "STATEA", "COUNTYA", "TRACTA",
"GN5001",
paste0("GN700", 1:7),
paste0("GN70", c("08", "09", "10", "11", "12", "13", "14"))
)
new_names = c(
"year", "state", "county", "tract",
"pop_total",
"pov_under5", "pov_over5", "pov_6_11", "pov_12_17", "pov_18_64", "pov_65_74",
"pov_over75",
"notpov_under5", "notpov_over5", "notpov_6_11", "notpov_12_17", "notpov_18_64", "notpov_65_74",
"notpov_over75"
)
dt_test = dt_test[,..cols]
setnames(dt_test, old=cols, new=new_names)
dt_test[, pov_rate_6_11 := pov_6_11/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_var_6_11 := pov_rate_6_11*(1-pov_rate_6_11)/(pov_6_11+notpov_6_11)]
dt_test[, pov_rate_12_17 := pov_12_17/(pov_12_17+notpov_12_17)]
dt_test[, pov_rate_var_12_17 := pov_rate_12_17*(1-pov_rate_12_17)/(pov_12_17+notpov_12_17)]
# Same procedure over tracts instead of neighborhoods
for(age in c("6_11","12_17")){
if(age=="6_11"){
inds = !is.na(dt_test$pov_rate_6_11) & !is.na(dt_test$pov_rate_var_6_11) & dt_test$pov_rate_var_6_11!=0
mean_vector = dt_test[inds, ]$pov_rate_6_11
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var_6_11)
}else if(age=="12_17"){
inds = !is.na(dt_test$pov_rate_12_17) & !is.na(dt_test$pov_rate_var_12_17) & dt_test$pov_rate_var_12_17!=0
mean_vector = dt_test[inds, ]$pov_rate_12_17
se_vector   = sqrt(dt_test[inds, ]$pov_rate_var_12_17)
}
CS_simul = csranks(x=mean_vector,
sd=se_vector,
coverage=0.95,
simul=TRUE,
stepdown=TRUE,
cstype="two-sided",
R=1000,
seed=1234,
na.rm=TRUE)
results = data.table(ranks = xrank(mean_vector),
lower = CS_simul$L,
upper = CS_simul$U)
# Rank inference,all tracts
g=ggplot(results, aes(x=ranks, y=ranks)) +
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper))  +
coord_flip() +
xlab("Poverty Share Rank") +
ylab("Poverty Share Rank")
ggsave(
filename = paste0("la_pov_ranks_tracts_2000_",age,".", outdev),
plot = g,
device = outdev,
path = file.path(path_fig, "pov_ranks"),
height=10,
width=8
)
}
dt_test
mean(dt_test$pov_12_17 + dt_test$notpov_12_17)
inds = !is.na(dt_test$pov_rate_12_17) & !is.na(dt_test$pov_rate_var_12_17) & dt_test$pov_rate_var_12_17!=0
mean(dt_test[inds,]$pov_12_17 + dt_test[inds,]$notpov_12_17)
mean(dt[!is.na(kfr_bm_var)]$kid_n)
median(dt_test[inds,]$pov_12_17 + dt_test[inds,]$notpov_12_17)
median(dt[!is.na(kfr_bm_var)]$kid_n)
test = rnorm(100, mean=0, sd=1)
plot(test, xrank(test))
plot(-test, xrank(test))
plot(e^test, xrank(test))
plot(exp(test), xrank(test))
plot(exp(test))
plot(exp(test), xrank(test))
?smoov_border
source('C:/Users/hab737/GitHub/finer_geos_outside/revision/targeting_examples/la_watts_compton/9_la_kfr_map.R', echo=TRUE)
?smoov_border
getwd()
setwd("C:/Users/hab737/GitHub/smoov")
document()
usethis::document()
library(devtools)
document()
document()
